#!/bin/sh

slb=/usr/local/qdos-gcc/bin/slb

version=`/usr/local/bin/qdos-gcc --version`
cd /usr/local/lib/gcc-lib/qdos/$version/

# Reorder the libgcc.a library properly
mkdir libgcc
cd libgcc
$slb -x ../libgcc.a
$slb -L list *.o
tsort list >ordered
$slb -crv -m ordered libgcc.a
rm -f ../libgcc.a
mv libgcc.a ..
cd ..
rm -rf libgcc/

# Replace the useless m68000/libgcc.a with a soft link
ln -sf /usr/local/lib/gcc-lib/qdos/$version/libgcc.a m68000/libgcc.a
# Add a link to libgcc.a into the qdos library directory
ln -sf /usr/local/lib/gcc-lib/qdos/$version/libgcc.a /usr/local/qdos-gcc/lib/libgcc.a

# Add soft links to the qdos as and ld script/binary
ln -sf /usr/local/qdos-gcc/bin/as as
ln -sf /usr/local/qdos-gcc/bin/ld ld

# Strip all the cumbersome debugging symbols out of the binaries
strip -s cc1 collect2 cpp

# Now we tidy up all the stuff in /usr/local/bin
cd /usr/local/bin
# Strip all the cumbersome debugging symbols out of the binaries
strip -s cpp gcov qdos-gcc qdos-protoize qdos-unprotoize
# Move all qdos related binaries to /usr/local/qdos-gcc/bin and
# replace them with soft links...
mv -f  cpp gcov qdos-gcc qdos-protoize qdos-unprotoize ../qdos-gcc/bin/
ln -sf ../qdos-gcc/bin/cpp qdos-cpp
ln -sf ../qdos-gcc/bin/gcov qdos-gcov
ln -sf ../qdos-gcc/bin/qdos-gcc qdos-gcc
ln -sf ../qdos-gcc/bin/qdos-protoize qdos-protoize
ln -sf ../qdos-gcc/bin/qdos-unprotoize qdos-unprotoize

# Finally, tidy up things in /usr/local/qdos-gcc/bin
cd /usr/local/qdos-gcc/bin
# Remove useless gcc and make it a link to qdos-gcc, also add cc
rm -f gcc
ln -sf qdos-gcc gcc
ln -sf gcc cc
